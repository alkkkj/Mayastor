# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import mayastor_pb2 as mayastor__pb2


class MayastorStub(object):
    """Service for managing storage pools, replicas and nexus's.
    Replica holds the actual user data. From user application the
    data are accessed indirectly through nexus object.
    Storage pool related methods.

    Storage pool is made up of block devices disks and provides a storage
    space for thin provisioning of replicas.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreatePool = channel.unary_unary(
                '/mayastor.Mayastor/CreatePool',
                request_serializer=mayastor__pb2.CreatePoolRequest.SerializeToString,
                response_deserializer=mayastor__pb2.Pool.FromString,
                )
        self.DestroyPool = channel.unary_unary(
                '/mayastor.Mayastor/DestroyPool',
                request_serializer=mayastor__pb2.DestroyPoolRequest.SerializeToString,
                response_deserializer=mayastor__pb2.Null.FromString,
                )
        self.ListPools = channel.unary_unary(
                '/mayastor.Mayastor/ListPools',
                request_serializer=mayastor__pb2.Null.SerializeToString,
                response_deserializer=mayastor__pb2.ListPoolsReply.FromString,
                )
        self.CreateReplica = channel.unary_unary(
                '/mayastor.Mayastor/CreateReplica',
                request_serializer=mayastor__pb2.CreateReplicaRequest.SerializeToString,
                response_deserializer=mayastor__pb2.Replica.FromString,
                )
        self.DestroyReplica = channel.unary_unary(
                '/mayastor.Mayastor/DestroyReplica',
                request_serializer=mayastor__pb2.DestroyReplicaRequest.SerializeToString,
                response_deserializer=mayastor__pb2.Null.FromString,
                )
        self.ListReplicas = channel.unary_unary(
                '/mayastor.Mayastor/ListReplicas',
                request_serializer=mayastor__pb2.Null.SerializeToString,
                response_deserializer=mayastor__pb2.ListReplicasReply.FromString,
                )
        self.StatReplicas = channel.unary_unary(
                '/mayastor.Mayastor/StatReplicas',
                request_serializer=mayastor__pb2.Null.SerializeToString,
                response_deserializer=mayastor__pb2.StatReplicasReply.FromString,
                )
        self.ShareReplica = channel.unary_unary(
                '/mayastor.Mayastor/ShareReplica',
                request_serializer=mayastor__pb2.ShareReplicaRequest.SerializeToString,
                response_deserializer=mayastor__pb2.ShareReplicaReply.FromString,
                )
        self.CreateNexus = channel.unary_unary(
                '/mayastor.Mayastor/CreateNexus',
                request_serializer=mayastor__pb2.CreateNexusRequest.SerializeToString,
                response_deserializer=mayastor__pb2.Nexus.FromString,
                )
        self.DestroyNexus = channel.unary_unary(
                '/mayastor.Mayastor/DestroyNexus',
                request_serializer=mayastor__pb2.DestroyNexusRequest.SerializeToString,
                response_deserializer=mayastor__pb2.Null.FromString,
                )
        self.ListNexus = channel.unary_unary(
                '/mayastor.Mayastor/ListNexus',
                request_serializer=mayastor__pb2.Null.SerializeToString,
                response_deserializer=mayastor__pb2.ListNexusReply.FromString,
                )
        self.AddChildNexus = channel.unary_unary(
                '/mayastor.Mayastor/AddChildNexus',
                request_serializer=mayastor__pb2.AddChildNexusRequest.SerializeToString,
                response_deserializer=mayastor__pb2.Child.FromString,
                )
        self.RemoveChildNexus = channel.unary_unary(
                '/mayastor.Mayastor/RemoveChildNexus',
                request_serializer=mayastor__pb2.RemoveChildNexusRequest.SerializeToString,
                response_deserializer=mayastor__pb2.Null.FromString,
                )
        self.FaultNexusChild = channel.unary_unary(
                '/mayastor.Mayastor/FaultNexusChild',
                request_serializer=mayastor__pb2.FaultNexusChildRequest.SerializeToString,
                response_deserializer=mayastor__pb2.Null.FromString,
                )
        self.PublishNexus = channel.unary_unary(
                '/mayastor.Mayastor/PublishNexus',
                request_serializer=mayastor__pb2.PublishNexusRequest.SerializeToString,
                response_deserializer=mayastor__pb2.PublishNexusReply.FromString,
                )
        self.UnpublishNexus = channel.unary_unary(
                '/mayastor.Mayastor/UnpublishNexus',
                request_serializer=mayastor__pb2.UnpublishNexusRequest.SerializeToString,
                response_deserializer=mayastor__pb2.Null.FromString,
                )
        self.GetNvmeAnaState = channel.unary_unary(
                '/mayastor.Mayastor/GetNvmeAnaState',
                request_serializer=mayastor__pb2.GetNvmeAnaStateRequest.SerializeToString,
                response_deserializer=mayastor__pb2.GetNvmeAnaStateReply.FromString,
                )
        self.SetNvmeAnaState = channel.unary_unary(
                '/mayastor.Mayastor/SetNvmeAnaState',
                request_serializer=mayastor__pb2.SetNvmeAnaStateRequest.SerializeToString,
                response_deserializer=mayastor__pb2.Null.FromString,
                )
        self.ChildOperation = channel.unary_unary(
                '/mayastor.Mayastor/ChildOperation',
                request_serializer=mayastor__pb2.ChildNexusRequest.SerializeToString,
                response_deserializer=mayastor__pb2.Null.FromString,
                )
        self.StartRebuild = channel.unary_unary(
                '/mayastor.Mayastor/StartRebuild',
                request_serializer=mayastor__pb2.StartRebuildRequest.SerializeToString,
                response_deserializer=mayastor__pb2.Null.FromString,
                )
        self.StopRebuild = channel.unary_unary(
                '/mayastor.Mayastor/StopRebuild',
                request_serializer=mayastor__pb2.StopRebuildRequest.SerializeToString,
                response_deserializer=mayastor__pb2.Null.FromString,
                )
        self.PauseRebuild = channel.unary_unary(
                '/mayastor.Mayastor/PauseRebuild',
                request_serializer=mayastor__pb2.PauseRebuildRequest.SerializeToString,
                response_deserializer=mayastor__pb2.Null.FromString,
                )
        self.ResumeRebuild = channel.unary_unary(
                '/mayastor.Mayastor/ResumeRebuild',
                request_serializer=mayastor__pb2.ResumeRebuildRequest.SerializeToString,
                response_deserializer=mayastor__pb2.Null.FromString,
                )
        self.GetRebuildState = channel.unary_unary(
                '/mayastor.Mayastor/GetRebuildState',
                request_serializer=mayastor__pb2.RebuildStateRequest.SerializeToString,
                response_deserializer=mayastor__pb2.RebuildStateReply.FromString,
                )
        self.GetRebuildStats = channel.unary_unary(
                '/mayastor.Mayastor/GetRebuildStats',
                request_serializer=mayastor__pb2.RebuildStatsRequest.SerializeToString,
                response_deserializer=mayastor__pb2.RebuildStatsReply.FromString,
                )
        self.GetRebuildProgress = channel.unary_unary(
                '/mayastor.Mayastor/GetRebuildProgress',
                request_serializer=mayastor__pb2.RebuildProgressRequest.SerializeToString,
                response_deserializer=mayastor__pb2.RebuildProgressReply.FromString,
                )
        self.CreateSnapshot = channel.unary_unary(
                '/mayastor.Mayastor/CreateSnapshot',
                request_serializer=mayastor__pb2.CreateSnapshotRequest.SerializeToString,
                response_deserializer=mayastor__pb2.CreateSnapshotReply.FromString,
                )
        self.ListBlockDevices = channel.unary_unary(
                '/mayastor.Mayastor/ListBlockDevices',
                request_serializer=mayastor__pb2.ListBlockDevicesRequest.SerializeToString,
                response_deserializer=mayastor__pb2.ListBlockDevicesReply.FromString,
                )
        self.GetResourceUsage = channel.unary_unary(
                '/mayastor.Mayastor/GetResourceUsage',
                request_serializer=mayastor__pb2.Null.SerializeToString,
                response_deserializer=mayastor__pb2.GetResourceUsageReply.FromString,
                )


class MayastorServicer(object):
    """Service for managing storage pools, replicas and nexus's.
    Replica holds the actual user data. From user application the
    data are accessed indirectly through nexus object.
    Storage pool related methods.

    Storage pool is made up of block devices disks and provides a storage
    space for thin provisioning of replicas.
    """

    def CreatePool(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DestroyPool(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListPools(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateReplica(self, request, context):
        """Replica related methods.

        Replica allocates space from storage pool.

        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DestroyReplica(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListReplicas(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StatReplicas(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ShareReplica(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateNexus(self, request, context):
        """Nexus related methods.

        Nexus is a logical frontend representing a data volume taking care of
        replication and rebuild in the background.

        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DestroyNexus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListNexus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddChildNexus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RemoveChildNexus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FaultNexusChild(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PublishNexus(self, request, context):
        """This method is called by control plane to construct a block device
        (/dev/...) that will be used to connect the nexus to the OS.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UnpublishNexus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetNvmeAnaState(self, request, context):
        """NVMe ANA state
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetNvmeAnaState(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ChildOperation(self, request, context):
        """Nexus child operations
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StartRebuild(self, request, context):
        """Rebuild operations
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StopRebuild(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PauseRebuild(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ResumeRebuild(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetRebuildState(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetRebuildStats(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetRebuildProgress(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateSnapshot(self, request, context):
        """Snapshot operations
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListBlockDevices(self, request, context):
        """Enumerate block devices on current host
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetResourceUsage(self, request, context):
        """Obtain resource usage statistics for the current process
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MayastorServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreatePool': grpc.unary_unary_rpc_method_handler(
                    servicer.CreatePool,
                    request_deserializer=mayastor__pb2.CreatePoolRequest.FromString,
                    response_serializer=mayastor__pb2.Pool.SerializeToString,
            ),
            'DestroyPool': grpc.unary_unary_rpc_method_handler(
                    servicer.DestroyPool,
                    request_deserializer=mayastor__pb2.DestroyPoolRequest.FromString,
                    response_serializer=mayastor__pb2.Null.SerializeToString,
            ),
            'ListPools': grpc.unary_unary_rpc_method_handler(
                    servicer.ListPools,
                    request_deserializer=mayastor__pb2.Null.FromString,
                    response_serializer=mayastor__pb2.ListPoolsReply.SerializeToString,
            ),
            'CreateReplica': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateReplica,
                    request_deserializer=mayastor__pb2.CreateReplicaRequest.FromString,
                    response_serializer=mayastor__pb2.Replica.SerializeToString,
            ),
            'DestroyReplica': grpc.unary_unary_rpc_method_handler(
                    servicer.DestroyReplica,
                    request_deserializer=mayastor__pb2.DestroyReplicaRequest.FromString,
                    response_serializer=mayastor__pb2.Null.SerializeToString,
            ),
            'ListReplicas': grpc.unary_unary_rpc_method_handler(
                    servicer.ListReplicas,
                    request_deserializer=mayastor__pb2.Null.FromString,
                    response_serializer=mayastor__pb2.ListReplicasReply.SerializeToString,
            ),
            'StatReplicas': grpc.unary_unary_rpc_method_handler(
                    servicer.StatReplicas,
                    request_deserializer=mayastor__pb2.Null.FromString,
                    response_serializer=mayastor__pb2.StatReplicasReply.SerializeToString,
            ),
            'ShareReplica': grpc.unary_unary_rpc_method_handler(
                    servicer.ShareReplica,
                    request_deserializer=mayastor__pb2.ShareReplicaRequest.FromString,
                    response_serializer=mayastor__pb2.ShareReplicaReply.SerializeToString,
            ),
            'CreateNexus': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateNexus,
                    request_deserializer=mayastor__pb2.CreateNexusRequest.FromString,
                    response_serializer=mayastor__pb2.Nexus.SerializeToString,
            ),
            'DestroyNexus': grpc.unary_unary_rpc_method_handler(
                    servicer.DestroyNexus,
                    request_deserializer=mayastor__pb2.DestroyNexusRequest.FromString,
                    response_serializer=mayastor__pb2.Null.SerializeToString,
            ),
            'ListNexus': grpc.unary_unary_rpc_method_handler(
                    servicer.ListNexus,
                    request_deserializer=mayastor__pb2.Null.FromString,
                    response_serializer=mayastor__pb2.ListNexusReply.SerializeToString,
            ),
            'AddChildNexus': grpc.unary_unary_rpc_method_handler(
                    servicer.AddChildNexus,
                    request_deserializer=mayastor__pb2.AddChildNexusRequest.FromString,
                    response_serializer=mayastor__pb2.Child.SerializeToString,
            ),
            'RemoveChildNexus': grpc.unary_unary_rpc_method_handler(
                    servicer.RemoveChildNexus,
                    request_deserializer=mayastor__pb2.RemoveChildNexusRequest.FromString,
                    response_serializer=mayastor__pb2.Null.SerializeToString,
            ),
            'FaultNexusChild': grpc.unary_unary_rpc_method_handler(
                    servicer.FaultNexusChild,
                    request_deserializer=mayastor__pb2.FaultNexusChildRequest.FromString,
                    response_serializer=mayastor__pb2.Null.SerializeToString,
            ),
            'PublishNexus': grpc.unary_unary_rpc_method_handler(
                    servicer.PublishNexus,
                    request_deserializer=mayastor__pb2.PublishNexusRequest.FromString,
                    response_serializer=mayastor__pb2.PublishNexusReply.SerializeToString,
            ),
            'UnpublishNexus': grpc.unary_unary_rpc_method_handler(
                    servicer.UnpublishNexus,
                    request_deserializer=mayastor__pb2.UnpublishNexusRequest.FromString,
                    response_serializer=mayastor__pb2.Null.SerializeToString,
            ),
            'GetNvmeAnaState': grpc.unary_unary_rpc_method_handler(
                    servicer.GetNvmeAnaState,
                    request_deserializer=mayastor__pb2.GetNvmeAnaStateRequest.FromString,
                    response_serializer=mayastor__pb2.GetNvmeAnaStateReply.SerializeToString,
            ),
            'SetNvmeAnaState': grpc.unary_unary_rpc_method_handler(
                    servicer.SetNvmeAnaState,
                    request_deserializer=mayastor__pb2.SetNvmeAnaStateRequest.FromString,
                    response_serializer=mayastor__pb2.Null.SerializeToString,
            ),
            'ChildOperation': grpc.unary_unary_rpc_method_handler(
                    servicer.ChildOperation,
                    request_deserializer=mayastor__pb2.ChildNexusRequest.FromString,
                    response_serializer=mayastor__pb2.Null.SerializeToString,
            ),
            'StartRebuild': grpc.unary_unary_rpc_method_handler(
                    servicer.StartRebuild,
                    request_deserializer=mayastor__pb2.StartRebuildRequest.FromString,
                    response_serializer=mayastor__pb2.Null.SerializeToString,
            ),
            'StopRebuild': grpc.unary_unary_rpc_method_handler(
                    servicer.StopRebuild,
                    request_deserializer=mayastor__pb2.StopRebuildRequest.FromString,
                    response_serializer=mayastor__pb2.Null.SerializeToString,
            ),
            'PauseRebuild': grpc.unary_unary_rpc_method_handler(
                    servicer.PauseRebuild,
                    request_deserializer=mayastor__pb2.PauseRebuildRequest.FromString,
                    response_serializer=mayastor__pb2.Null.SerializeToString,
            ),
            'ResumeRebuild': grpc.unary_unary_rpc_method_handler(
                    servicer.ResumeRebuild,
                    request_deserializer=mayastor__pb2.ResumeRebuildRequest.FromString,
                    response_serializer=mayastor__pb2.Null.SerializeToString,
            ),
            'GetRebuildState': grpc.unary_unary_rpc_method_handler(
                    servicer.GetRebuildState,
                    request_deserializer=mayastor__pb2.RebuildStateRequest.FromString,
                    response_serializer=mayastor__pb2.RebuildStateReply.SerializeToString,
            ),
            'GetRebuildStats': grpc.unary_unary_rpc_method_handler(
                    servicer.GetRebuildStats,
                    request_deserializer=mayastor__pb2.RebuildStatsRequest.FromString,
                    response_serializer=mayastor__pb2.RebuildStatsReply.SerializeToString,
            ),
            'GetRebuildProgress': grpc.unary_unary_rpc_method_handler(
                    servicer.GetRebuildProgress,
                    request_deserializer=mayastor__pb2.RebuildProgressRequest.FromString,
                    response_serializer=mayastor__pb2.RebuildProgressReply.SerializeToString,
            ),
            'CreateSnapshot': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateSnapshot,
                    request_deserializer=mayastor__pb2.CreateSnapshotRequest.FromString,
                    response_serializer=mayastor__pb2.CreateSnapshotReply.SerializeToString,
            ),
            'ListBlockDevices': grpc.unary_unary_rpc_method_handler(
                    servicer.ListBlockDevices,
                    request_deserializer=mayastor__pb2.ListBlockDevicesRequest.FromString,
                    response_serializer=mayastor__pb2.ListBlockDevicesReply.SerializeToString,
            ),
            'GetResourceUsage': grpc.unary_unary_rpc_method_handler(
                    servicer.GetResourceUsage,
                    request_deserializer=mayastor__pb2.Null.FromString,
                    response_serializer=mayastor__pb2.GetResourceUsageReply.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'mayastor.Mayastor', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Mayastor(object):
    """Service for managing storage pools, replicas and nexus's.
    Replica holds the actual user data. From user application the
    data are accessed indirectly through nexus object.
    Storage pool related methods.

    Storage pool is made up of block devices disks and provides a storage
    space for thin provisioning of replicas.
    """

    @staticmethod
    def CreatePool(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mayastor.Mayastor/CreatePool',
            mayastor__pb2.CreatePoolRequest.SerializeToString,
            mayastor__pb2.Pool.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DestroyPool(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mayastor.Mayastor/DestroyPool',
            mayastor__pb2.DestroyPoolRequest.SerializeToString,
            mayastor__pb2.Null.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListPools(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mayastor.Mayastor/ListPools',
            mayastor__pb2.Null.SerializeToString,
            mayastor__pb2.ListPoolsReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateReplica(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mayastor.Mayastor/CreateReplica',
            mayastor__pb2.CreateReplicaRequest.SerializeToString,
            mayastor__pb2.Replica.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DestroyReplica(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mayastor.Mayastor/DestroyReplica',
            mayastor__pb2.DestroyReplicaRequest.SerializeToString,
            mayastor__pb2.Null.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListReplicas(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mayastor.Mayastor/ListReplicas',
            mayastor__pb2.Null.SerializeToString,
            mayastor__pb2.ListReplicasReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StatReplicas(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mayastor.Mayastor/StatReplicas',
            mayastor__pb2.Null.SerializeToString,
            mayastor__pb2.StatReplicasReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ShareReplica(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mayastor.Mayastor/ShareReplica',
            mayastor__pb2.ShareReplicaRequest.SerializeToString,
            mayastor__pb2.ShareReplicaReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateNexus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mayastor.Mayastor/CreateNexus',
            mayastor__pb2.CreateNexusRequest.SerializeToString,
            mayastor__pb2.Nexus.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DestroyNexus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mayastor.Mayastor/DestroyNexus',
            mayastor__pb2.DestroyNexusRequest.SerializeToString,
            mayastor__pb2.Null.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListNexus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mayastor.Mayastor/ListNexus',
            mayastor__pb2.Null.SerializeToString,
            mayastor__pb2.ListNexusReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddChildNexus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mayastor.Mayastor/AddChildNexus',
            mayastor__pb2.AddChildNexusRequest.SerializeToString,
            mayastor__pb2.Child.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RemoveChildNexus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mayastor.Mayastor/RemoveChildNexus',
            mayastor__pb2.RemoveChildNexusRequest.SerializeToString,
            mayastor__pb2.Null.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def FaultNexusChild(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mayastor.Mayastor/FaultNexusChild',
            mayastor__pb2.FaultNexusChildRequest.SerializeToString,
            mayastor__pb2.Null.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PublishNexus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mayastor.Mayastor/PublishNexus',
            mayastor__pb2.PublishNexusRequest.SerializeToString,
            mayastor__pb2.PublishNexusReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UnpublishNexus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mayastor.Mayastor/UnpublishNexus',
            mayastor__pb2.UnpublishNexusRequest.SerializeToString,
            mayastor__pb2.Null.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetNvmeAnaState(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mayastor.Mayastor/GetNvmeAnaState',
            mayastor__pb2.GetNvmeAnaStateRequest.SerializeToString,
            mayastor__pb2.GetNvmeAnaStateReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetNvmeAnaState(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mayastor.Mayastor/SetNvmeAnaState',
            mayastor__pb2.SetNvmeAnaStateRequest.SerializeToString,
            mayastor__pb2.Null.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ChildOperation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mayastor.Mayastor/ChildOperation',
            mayastor__pb2.ChildNexusRequest.SerializeToString,
            mayastor__pb2.Null.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StartRebuild(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mayastor.Mayastor/StartRebuild',
            mayastor__pb2.StartRebuildRequest.SerializeToString,
            mayastor__pb2.Null.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StopRebuild(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mayastor.Mayastor/StopRebuild',
            mayastor__pb2.StopRebuildRequest.SerializeToString,
            mayastor__pb2.Null.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PauseRebuild(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mayastor.Mayastor/PauseRebuild',
            mayastor__pb2.PauseRebuildRequest.SerializeToString,
            mayastor__pb2.Null.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ResumeRebuild(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mayastor.Mayastor/ResumeRebuild',
            mayastor__pb2.ResumeRebuildRequest.SerializeToString,
            mayastor__pb2.Null.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetRebuildState(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mayastor.Mayastor/GetRebuildState',
            mayastor__pb2.RebuildStateRequest.SerializeToString,
            mayastor__pb2.RebuildStateReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetRebuildStats(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mayastor.Mayastor/GetRebuildStats',
            mayastor__pb2.RebuildStatsRequest.SerializeToString,
            mayastor__pb2.RebuildStatsReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetRebuildProgress(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mayastor.Mayastor/GetRebuildProgress',
            mayastor__pb2.RebuildProgressRequest.SerializeToString,
            mayastor__pb2.RebuildProgressReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateSnapshot(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mayastor.Mayastor/CreateSnapshot',
            mayastor__pb2.CreateSnapshotRequest.SerializeToString,
            mayastor__pb2.CreateSnapshotReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListBlockDevices(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mayastor.Mayastor/ListBlockDevices',
            mayastor__pb2.ListBlockDevicesRequest.SerializeToString,
            mayastor__pb2.ListBlockDevicesReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetResourceUsage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mayastor.Mayastor/GetResourceUsage',
            mayastor__pb2.Null.SerializeToString,
            mayastor__pb2.GetResourceUsageReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class BdevRpcStub(object):
    """Anything what follows here are private interfaces used for interacting with
    mayastor outside the scope of CSI.

    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.List = channel.unary_unary(
                '/mayastor.BdevRpc/List',
                request_serializer=mayastor__pb2.Null.SerializeToString,
                response_deserializer=mayastor__pb2.Bdevs.FromString,
                )
        self.Create = channel.unary_unary(
                '/mayastor.BdevRpc/Create',
                request_serializer=mayastor__pb2.BdevUri.SerializeToString,
                response_deserializer=mayastor__pb2.CreateReply.FromString,
                )
        self.Destroy = channel.unary_unary(
                '/mayastor.BdevRpc/Destroy',
                request_serializer=mayastor__pb2.BdevUri.SerializeToString,
                response_deserializer=mayastor__pb2.Null.FromString,
                )
        self.Share = channel.unary_unary(
                '/mayastor.BdevRpc/Share',
                request_serializer=mayastor__pb2.BdevShareRequest.SerializeToString,
                response_deserializer=mayastor__pb2.BdevShareReply.FromString,
                )
        self.Unshare = channel.unary_unary(
                '/mayastor.BdevRpc/Unshare',
                request_serializer=mayastor__pb2.CreateReply.SerializeToString,
                response_deserializer=mayastor__pb2.Null.FromString,
                )


class BdevRpcServicer(object):
    """Anything what follows here are private interfaces used for interacting with
    mayastor outside the scope of CSI.

    """

    def List(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Create(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Destroy(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Share(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Unshare(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_BdevRpcServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'List': grpc.unary_unary_rpc_method_handler(
                    servicer.List,
                    request_deserializer=mayastor__pb2.Null.FromString,
                    response_serializer=mayastor__pb2.Bdevs.SerializeToString,
            ),
            'Create': grpc.unary_unary_rpc_method_handler(
                    servicer.Create,
                    request_deserializer=mayastor__pb2.BdevUri.FromString,
                    response_serializer=mayastor__pb2.CreateReply.SerializeToString,
            ),
            'Destroy': grpc.unary_unary_rpc_method_handler(
                    servicer.Destroy,
                    request_deserializer=mayastor__pb2.BdevUri.FromString,
                    response_serializer=mayastor__pb2.Null.SerializeToString,
            ),
            'Share': grpc.unary_unary_rpc_method_handler(
                    servicer.Share,
                    request_deserializer=mayastor__pb2.BdevShareRequest.FromString,
                    response_serializer=mayastor__pb2.BdevShareReply.SerializeToString,
            ),
            'Unshare': grpc.unary_unary_rpc_method_handler(
                    servicer.Unshare,
                    request_deserializer=mayastor__pb2.CreateReply.FromString,
                    response_serializer=mayastor__pb2.Null.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'mayastor.BdevRpc', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class BdevRpc(object):
    """Anything what follows here are private interfaces used for interacting with
    mayastor outside the scope of CSI.

    """

    @staticmethod
    def List(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mayastor.BdevRpc/List',
            mayastor__pb2.Null.SerializeToString,
            mayastor__pb2.Bdevs.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Create(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mayastor.BdevRpc/Create',
            mayastor__pb2.BdevUri.SerializeToString,
            mayastor__pb2.CreateReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Destroy(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mayastor.BdevRpc/Destroy',
            mayastor__pb2.BdevUri.SerializeToString,
            mayastor__pb2.Null.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Share(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mayastor.BdevRpc/Share',
            mayastor__pb2.BdevShareRequest.SerializeToString,
            mayastor__pb2.BdevShareReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Unshare(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mayastor.BdevRpc/Unshare',
            mayastor__pb2.CreateReply.SerializeToString,
            mayastor__pb2.Null.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class JsonRpcStub(object):
    """SPDK json-rpc proxy service

    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.JsonRpcCall = channel.unary_unary(
                '/mayastor.JsonRpc/JsonRpcCall',
                request_serializer=mayastor__pb2.JsonRpcRequest.SerializeToString,
                response_deserializer=mayastor__pb2.JsonRpcReply.FromString,
                )


class JsonRpcServicer(object):
    """SPDK json-rpc proxy service

    """

    def JsonRpcCall(self, request, context):
        """Call a (SPDK) json-rpc method
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_JsonRpcServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'JsonRpcCall': grpc.unary_unary_rpc_method_handler(
                    servicer.JsonRpcCall,
                    request_deserializer=mayastor__pb2.JsonRpcRequest.FromString,
                    response_serializer=mayastor__pb2.JsonRpcReply.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'mayastor.JsonRpc', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class JsonRpc(object):
    """SPDK json-rpc proxy service

    """

    @staticmethod
    def JsonRpcCall(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mayastor.JsonRpc/JsonRpcCall',
            mayastor__pb2.JsonRpcRequest.SerializeToString,
            mayastor__pb2.JsonRpcReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
